<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sist.web.dao.UserDao">

	<!-- 회원 -->
	<resultMap type="com.sist.web.model.User" id="userResultMap">
		<id column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_NAME" property="userName" />
		<result column="USER_EMAIL" property="userEmail" />
		<result column="USER_INTRO" property="userIntro" />
		<result column="STATUS" property="status" />
		<result column="EMAIL_AUTH" property="emailAuth" />
		<result column="REG_DATE" property="regDate" />
		<result column="FILE_NAME" property="fileName" />
	</resultMap>
	
	<!-- 첨부파일 -->
	<resultMap type="com.sist.web.model.UserFile" id="userFileResultMap">
		<id column="USER_ID" property="userId" />
		<id column="FILE_NUM" property="fileNum" />
		<result column="FILE_ORG_NAME" property="fileOrgName" />
		<result column="FILE_NAME" property="fileName" />
		<result column="FILE_EXT" property="fileExt" />
		<result column="FILE_SIZE" property="fileSize" />
		<result column="REG_DATE" property="regDate" />
	</resultMap>
	

	<!-- 회원 조회 -->
	<select id="userSelect" parameterType="String" resultMap="userResultMap">		
		SELECT U.USER_ID,
		        NVL(U.USER_PWD, '') USER_PWD,
		        NVL(U.USER_NAME, '') USER_NAME,
		        NVL(U.USER_PHONE, '') USER_PHONE,
		        NVL(U.USER_EMAIL, '') USER_EMAIL,
		        NVL(U.USER_INTRO, '') USER_INTRO,
		        NVL(U.STATUS, 'Y') STATUS,
		        NVL(U.EMAIL_AUTH, 'N') EMAIL_AUTH,
		        NVL(TO_CHAR(U.REG_DATE, 'YYYY.MM.DD'), '') REG_DATE,
		        NVL(UF.FILE_NAME, '') FILE_NAME
		FROM INS_USER U, INS_USER_FILE UF
		WHERE U.USER_ID = UF.USER_ID(+)
        AND U.USER_ID = #{value}
	</select>
		
	<!-- 회원 등록 -->
	<insert id="userInsert" parameterType="com.sist.web.model.User">
		INSERT INTO INS_USER (
		    USER_ID,
		    USER_PWD,
		    USER_NAME,
		    USER_EMAIL,
		    USER_INTRO,
		    STATUS,
		    EMAIL_AUTH,
		    REG_DATE) 
		VALUES (
			#{userId},
		    #{userPwd},
		    #{userName},
		    #{userEmail},
		   	#{userIntro},
		    #{status},
		    #{emailAuth},
		    SYSDATE)
	</insert>
	
	<!-- 이메일 인증 -->
	<update id="emailAuth" parameterType="com.sist.web.model.User">
		UPDATE INS_USER 
		SET EMAIL_AUTH = 'Y' 
		WHERE USER_ID = ${userId}
	</update>
	
	<!-- 비밀번호 찾기 -->
	<update id="findPw" parameterType="com.sist.web.model.User">
		UPDATE INS_USER
		SET USER_PWD = #{userPwd}
		WHERE USER_EMAIL = #{userEmail}
	</update>
	
	<!-- 회원 수정 -->
	<update id="userUpdate" parameterType="com.sist.web.model.User">
		UPDATE INS_USER 
		SET USER_PWD = #{userPwd},
		    USER_NAME = #{userName},
		    USER_EMAIL = #{userEmail},
		    USER_INTRO = #{userIntro}
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 프로필 조회 -->
	<select id="userFileSelect" parameterType="String" resultMap="userFileResultMap">
		SELECT USER_ID, 
		    FILE_NUM, 
		    NVL(FILE_ORG_NAME, '') FILE_ORG_NAME,
		    NVL(FILE_NAME, '') FILE_NAME,
		    NVL(FILE_EXT, '') FILE_EXT,
		    NVL(FILE_SIZE, 0) FILE_SIZE,
		    NVL(TO_CHAR(REG_DATE, 'YYYY.MM.DD'), '') REG_DATE
		FROM INS_USER_FILE
		WHERE USER_ID = #{value}
	</select>
	
	<!-- 프로필 등록 -->
	<insert id="userFileInsert" parameterType="com.sist.web.model.UserFile">
		INSERT INTO INS_USER_FILE (
		    USER_ID,
		    FILE_NUM,
		    FILE_ORG_NAME,
		    FILE_NAME,
		    FILE_EXT,
		    FILE_SIZE,
		    REG_DATE)
		VALUES (
		    #{userId},
		    #{fileNum},
		    #{fileOrgName},
		    #{fileName},
		    #{fileExt},
		    #{fileSize},
		    SYSDATE)
	</insert>
	
	<!-- 프로필 삭제 -->
	<delete id="userFileDelete" parameterType="String">
		DELETE FROM INS_USER_FILE
		WHERE USER_ID = #{value}
	</delete>
	
	<!-- 랜덤 -->
	<select id="userRandom" parameterType="String" resultMap="userResultMap">		
		SELECT *
		FROM (SELECT *
		        FROM INS_USER
		        ORDER BY DBMS_RANDOM.VALUE)
		WHERE ROWNUM <![CDATA[<=]]> 5
		AND USER_ID != #{value}
	</select>
	
</mapper>